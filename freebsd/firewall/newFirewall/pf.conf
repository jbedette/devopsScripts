ext_if="hn0"
int_if="hn1"

icmp_types="{ echoreq, unreach }"
services="{ ssh, domain, http, ntp, https }"
server="192.168.33.163"
ssh_rdr="2222"

table <rfc6890> { 0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 \
                  172.16.0.0/12 192.0.0.0/24 192.0.0.0/29 192.0.2.0/24 192.88.99.0/24 \
                  192.168.0.0/16 198.18.0.0/15 198.51.100.0/24 203.0.113.0/24 \
                  240.0.0.0/4 255.255.255.255/32 }
table <bruteforce> persist

#options
set skip on lo0

#normalization
scrub in all fragment reassemble max-mss 1441

#NAT rules
nat on $ext_if from $int_if:network to any -> ($ext_if)

#Redirection rules
# Forward SSH traffic from port 22 to port 2222 locally
rdr on $ext_if proto tcp from any to ($ext_if) port 22 -> 127.0.0.1 port 2222

# Forward traffic from port 2222 to port 22 on the Ubuntu machine
rdr on $ext_if proto tcp from any to ($ext_if) port 2222 -> $server port 22

#blocking rules
antispoof quick for $ext_if
block in quick on egress from <rfc6890>
block return out quick on egress to <rfc6890>
block log all

#pass rules
pass in quick on $int_if inet proto udp from any port = bootpc to 255.255.255.255 port = bootps keep state label "allow access to DHCP server"
pass in quick on $int_if inet proto udp from any port = bootpc to $int_if:network port = bootps keep state label "allow access to DHCP server"
pass out quick on $int_if inet proto udp from $int_if:0 port = bootps to any port = bootpc keep state label "allow access to DHCP server"

pass in quick on $ext_if inet proto udp from any port = bootps to $ext_if:0 port = bootpc keep state label "allow access to DHCP client"
pass out quick on $ext_if inet proto udp from $ext_if:0 port = bootpc to any port = bootps keep state label "allow access to DHCP client"

pass in on $ext_if proto tcp to port { ssh } keep state (max-src-conn 15, max-src-conn-rate 3/1, overload <bruteforce> flush global)
pass out on $ext_if proto { tcp, udp } to port $services
pass out on $ext_if inet proto icmp icmp-type $icmp_types
pass in on $int_if from $int_if:network to any
pass out on $int_if from $int_if:network to any
